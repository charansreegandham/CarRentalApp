{"version":3,"file":"339.0d404c8b417357a7.js","mappings":"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","names":["BASIC_URL","CustomerService","constructor","http","this","getAlCars","get","headers","createAuthorizationHeader","getCarById","carId","bookACar","bookCarDto","post","getBookingsByUserId","StorageService","getUserId","searchCar","searchCarDto","HttpHeaders","set","getToken","static","t","i0","i1","core","Yz7","factory","Éµfac","providedIn","car_r1","processedImg","brand","name","description","price","color","transmission","type","modelYear","id","CustomerDashboardComponent","customerService","message","cars","getAllCars","subscribe","res","console","log","forEach","element","returnedImage","push","i2","Xpm","selectors","decls","vars","consts","template","rf","ctx","CustomerDashboardComponent_div_2_Template","ctx_r0","car","BookCarComponent","activated","fb","snapshot","params","isSpinning","dateFormat","bookACarForm","group","fromDate","Validators","required","toDate","bookCar","formData","obj","userId","success","nzDuration","error","i3","i4","BookCarComponent_div_2_Template","value","booking_r2","days","amount","_c0","bookCarStatus","GetBookingsComponent","service","getBookings","bookedCars","GetBookingsComponent_tr_16_Template","brand_r5","type_r6","color_r7","transmission_r8","car_r9","routes","path","component","SearchCarComponent","listOfBrands","listOfType","listOfColor","listOfTransmission","validateForm","carDtoList","SearchCarComponent_nz_option_10_Template","SearchCarComponent_nz_option_16_Template","SearchCarComponent_nz_option_22_Template","SearchCarComponent_nz_option_28_Template","SearchCarComponent_div_33_Template","CustomerRoutingModule","oAB","cJS","RouterModule","forChild","CustomerModule","CommonModule","NgZorroModule","ReactiveFormsModule","FormsModule"],"sourceRoot":"webpack:///","sources":["./src/app/modules/customer/services/customer.service.ts","./src/app/modules/customer/components/customer-dashboard/customer-dashboard.component.html","./src/app/modules/customer/components/customer-dashboard/customer-dashboard.component.ts","./src/app/modules/customer/components/book-car/book-car.component.html","./src/app/modules/customer/components/book-car/book-car.component.ts","./src/app/modules/customer/components/get-bookings/get-bookings.component.html","./src/app/modules/customer/components/get-bookings/get-bookings.component.ts","./src/app/modules/customer/components/search-car/search-car.component.html","./src/app/modules/customer/customer-routing.module.ts","./src/app/modules/customer/components/search-car/search-car.component.ts","./src/app/modules/customer/customer.module.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from 'src/app/auth/services/storage/storage.service';\r\n\r\n\r\nconst BASIC_URL = [\"http://localhost:8080\"];\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAlCars(): Observable<any> {\r\n    return this.http.get(BASIC_URL + \"/api/customer/cars\", {\r\n      headers: this.createAuthorizationHeader()\r\n    })\r\n  }\r\n\r\n  getCarById(carId: number): Observable<any> {\r\n    return this.http.get(BASIC_URL + \"/api/customer/car/\" + carId, {\r\n      headers: this.createAuthorizationHeader()\r\n    })\r\n  }\r\n\r\n  bookACar(carId: number, bookCarDto: any): Observable<any> {\r\n    return this.http.post(BASIC_URL + \"/api/customer/car/book/\" + carId, bookCarDto, {\r\n      headers: this.createAuthorizationHeader()\r\n    })\r\n  }\r\n\r\n  getBookingsByUserId(): Observable<any> {\r\n    return this.http.get(BASIC_URL + \"/api/customer/car/bookings/\" + StorageService.getUserId(), {\r\n      headers: this.createAuthorizationHeader()\r\n    })\r\n  }\r\n\r\n  searchCar(searchCarDto: any): Observable<any> {\r\n    return this.http.post(BASIC_URL + `/api/customer/car/search`, searchCarDto, {\r\n      headers: this.createAuthorizationHeader()\r\n    })\r\n  }\r\n\r\n  createAuthorizationHeader(): HttpHeaders {\r\n    let authHeaders: HttpHeaders = new HttpHeaders();\r\n    return authHeaders.set(\r\n      'Authorization',\r\n      'Bearer ' + StorageService.getToken()\r\n    );\r\n  }\r\n}\r\n","<div style=\"background-color: #F8F8F8; min-height: 91vh;\">\r\n\r\n    <div style=\"padding-top: 10px;\"></div>\r\n\r\n    <div style=\"margin-top:10px;\" class=\"child\" *ngFor=\"let car of cars\">\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\">\r\n                <img class=\"profile\" style=\"height: 130px; width: 200px; border-radius: 10px;\" [src]=\"car.processedImg\"\r\n                    alt=\"profile\" />\r\n            </div>\r\n            <div nz-col nzSpan=\"16\">\r\n                <h2 style=\"cursor: pointer; color: #108ee9;\">\r\n                    {{car.brand}} - {{car.name}}</h2>\r\n                <p>{{car.description}}</p>\r\n\r\n                <hr>\r\n                <h5>Price : <b>${{car.price}}</b> - Color : <b>{{car.color}}</b> - Transmission :\r\n                    <b>{{car.transmission}}</b> - Type : <b>{{car.type}}</b> - Year : <b>{{car.modelYear | date:\r\n                        'yyyy'}}</b>\r\n                </h5>\r\n                <hr>\r\n                <div style=\"float: right;\">\r\n                    <button style=\"margin-left: 10px;\" nzSize=\"small\" nz-button nzType=\"primary\"\r\n                        routerLink=\"/customer/book_car/{{car.id}}\">Book This Car</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\n\r\n@Component({\r\n  selector: 'app-customer-dashboard',\r\n  templateUrl: './customer-dashboard.component.html',\r\n  styleUrls: ['./customer-dashboard.component.scss']\r\n})\r\nexport class CustomerDashboardComponent {\r\n\r\n  cars: any = [];\r\n\r\n  constructor(private customerService: CustomerService,\r\n    private message: NzMessageService) {\r\n    this.getAllCars();\r\n  }\r\n\r\n  getAllCars() {\r\n    this.customerService.getAlCars().subscribe((res) => {\r\n      console.log(res);\r\n      res.forEach(element => {\r\n        element.processedImg = 'data:image/jpeg;base64,' + element.returnedImage;\r\n        this.cars.push(element);\r\n      });\r\n    })\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: #F8F8F8; min-height: 91vh;\">\r\n\r\n    <div style=\"padding-top: 10px;\"></div>\r\n\r\n    <div style=\"margin-top:10px;\" class=\"child\" *ngIf=\"car\">\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\">\r\n                <img class=\"profile\" style=\"height: 130px; width: 200px; border-radius: 10px;\" [src]=\"car.processedImg\"\r\n                    alt=\"profile\" />\r\n            </div>\r\n            <div nz-col nzSpan=\"16\">\r\n                <h2 style=\"cursor: pointer; color: #108ee9;\">\r\n                    {{car.brand}} - {{car.name}}</h2>\r\n                <p>{{car.description}}</p>\r\n\r\n                <hr>\r\n                <h5>Price : <b>${{car.price}}</b> - Color : <b>{{car.color}}</b> - Transmission :\r\n                    <b>{{car.transmission}}</b> - Type : <b>{{car.type}}</b> - Year : <b>{{car.modelYear | date:\r\n                        'yyyy'}}</b>\r\n                </h5>\r\n                <hr>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    <nz-spin [nzSpinning]=\"isSpinning\" [nzSize]=\"'large'\" nzTip=\"Working...\" style=\"margin-top: 50px;\">\r\n        <div class=\"dashboard-filter\">\r\n            <form [formGroup]=\"bookACarForm\">\r\n                <div class=\"filter-grid\">\r\n                    <div class=\"filter-select-dropdown filter-fields-width\">\r\n\r\n                        <nz-form-item style=\"margin-left: 50px;\">\r\n                            <nz-form-label [nzSpan]=\"0\" nzFor=\"From Date\">From Date</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"0\">\r\n                                <nz-date-picker formControlName=\"fromDate\" style=\"width: 100%;\"\r\n                                    nzPlaceHolder=\"From Date\" name=\"From Date\" [nzFormat]=\"dateFormat\" id=\"From Date\">\r\n                                </nz-date-picker>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n\r\n                        <nz-form-item style=\"margin-left: 100px;\">\r\n                            <nz-form-label [nzSpan]=\"0\" nzFor=\"To Date\">To Date</nz-form-label>\r\n                            <nz-form-control [nzSpan]=\"0\">\r\n                                <nz-date-picker formControlName=\"toDate\" style=\"width: 100%;\" nzPlaceHolder=\"To Date\"\r\n                                    name=\"To Date\" [nzFormat]=\"dateFormat\" id=\"To Date\">\r\n                                </nz-date-picker>\r\n                            </nz-form-control>\r\n                        </nz-form-item>\r\n\r\n                    </div>\r\n\r\n                    <div class=\"filter-select-dropdown filter-fields-width\">\r\n                        <button class=\"filterBtn\" style=\"margin-left: 45px;\" nz-button nzType=\"primary\"\r\n                            (click)=\"bookCar(bookACarForm.value)\">Book\r\n                            Car</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </nz-spin>\r\n</div>","import { Component } from '@angular/core';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { NzMessageService } from 'ng-zorro-antd/message';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { StorageService } from 'src/app/auth/services/storage/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-book-car',\r\n  templateUrl: './book-car.component.html',\r\n  styleUrls: ['./book-car.component.scss']\r\n})\r\nexport class BookCarComponent {\r\n\r\n  car: any;\r\n  carId: number = this.activated.snapshot.params[\"id\"];\r\n  bookACarForm!: FormGroup;\r\n  isSpinning = false;\r\n  dateFormat = \"yyyy-mm-dd\";\r\n\r\n  constructor(private customerService: CustomerService,\r\n    private message: NzMessageService,\r\n    private activated: ActivatedRoute,\r\n    private fb: FormBuilder) {\r\n    this.bookACarForm = this.fb.group({\r\n      fromDate: [null, Validators.required],\r\n      toDate: [null, Validators.required]\r\n    })\r\n    this.getCarById();\r\n  }\r\n\r\n  getCarById() {\r\n    this.customerService.getCarById(this.carId).subscribe((res) => {\r\n      console.log(res);\r\n      res.processedImg = 'data:image/jpeg;base64,' + res.returnedImage;\r\n      this.car = res;\r\n    })\r\n  }\r\n\r\n  bookCar(formData: any) {\r\n    this.isSpinning = true;\r\n    let obj = {\r\n      fromDate: formData.fromDate,\r\n      toDate: formData.toDate,\r\n      userId: StorageService.getUserId()\r\n    }\r\n    this.customerService.bookACar(this.carId, obj).subscribe((res) => {\r\n      this.isSpinning = false;\r\n      console.log(res);\r\n      this.message.success(\"Car booked successfully\", { nzDuration: 5000 });\r\n    }, error => {\r\n      this.message.error(\"Something went wrong\", { nzDuration: 5000 });\r\n    })\r\n  }\r\n\r\n}\r\n","<nz-spin [nzSpinning]=\"isSpinning\" [nzSize]=\"'large'\" nzTip=\"Working...\">\r\n    <nz-table #basicTable [nzData]=\"bookedCars\" [nzPageSize]=\"20\" [nzShowPagination]=\"'false'\">\r\n        <thead>\r\n            <tr>\r\n                <th style=\"font-weight: bolder; color: #003973;\">From</th>\r\n                <th style=\"font-weight: bolder; color: #003973;\">To</th>\r\n                <th style=\"font-weight: bolder; color: #003973;\">Days</th>\r\n                <th style=\"font-weight: bolder; color: #003973;\">Price</th>\r\n                <th style=\"font-weight: bolder; color: #003973;\">Status</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let booking of bookedCars\">\r\n                <td>{{booking.fromDate | date: 'MMM d, y'}}</td>\r\n                <td>{{booking.toDate | date: 'MMM d, y'}}</td>\r\n                <td>{{booking.days}}</td>\r\n                <td>{{booking.amount}}</td>\r\n                <td>\r\n                    <strong\r\n                        [ngStyle]=\"{'color': booking.bookCarStatus === 'APPROVED' ? 'green' : booking.bookCarStatus === 'REJECTED' ? 'blue' : 'red'}\">\r\n                        {{ booking.bookCarStatus }}\r\n                    </strong>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </nz-table>\r\n</nz-spin>","import { Component } from '@angular/core';\r\nimport { CustomerService } from '../../services/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-get-bookings',\r\n  templateUrl: './get-bookings.component.html',\r\n  styleUrls: ['./get-bookings.component.scss']\r\n})\r\nexport class GetBookingsComponent {\r\n\r\n  isSpinning = false;\r\n  bookedCars: any;\r\n\r\n  constructor(private service: CustomerService) {\r\n    this.getBookings();\r\n  }\r\n\r\n  getBookings() {\r\n    this.isSpinning = true;\r\n    this.service.getBookingsByUserId().subscribe((res) => {\r\n      this.isSpinning = false;\r\n      console.log(res);\r\n      this.bookedCars = res;\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"inner-content\">\r\n    <nz-spin [nzSpinning]=\"isSpinning\" [nzSize]=\"'large'\" nzTip=\"Working...\">\r\n        <div class=\"dashboard-filter\">\r\n            <div class=\"filter-grid\" [formGroup]=\"validateForm\">\r\n                <div class=\"filter-select-dropdown filter-fields-width\">\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-label nzFor=\"gender\">Brand</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"This Input Is Required!\">\r\n                            <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a Brand\" formControlName=\"brand\">\r\n                                <nz-option *ngFor=\"let brand of listOfBrands\" nzLabel={{brand}}\r\n                                    nzValue={{brand}}></nz-option>\r\n                            </nz-select>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-label nzFor=\"studentClass\">Type</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"This Input Is Required!\">\r\n                            <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a Type\" formControlName=\"type\">\r\n                                <nz-option *ngFor=\"let type of listOfType\" nzLabel={{type}}\r\n                                    nzValue={{type}}></nz-option>\r\n                            </nz-select>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-label nzFor=\"gender\">Color</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"This Input Is Required!\">\r\n                            <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a Color\" formControlName=\"color\">\r\n                                <nz-option *ngFor=\"let color of listOfColor\" nzLabel={{color}}\r\n                                    nzValue={{color}}></nz-option>\r\n                            </nz-select>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                    <nz-form-item>\r\n                        <nz-form-label nzFor=\"studentClass\">Transmission</nz-form-label>\r\n                        <nz-form-control nzErrorTip=\"This Input Is Required!\">\r\n                            <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"Select a Transmission\"\r\n                                formControlName=\"transmission\">\r\n                                <nz-option *ngFor=\"let transmission of listOfTransmission\" nzLabel={{transmission}}\r\n                                    nzValue={{transmission}}></nz-option>\r\n                            </nz-select>\r\n                        </nz-form-control>\r\n                    </nz-form-item>\r\n\r\n                </div>\r\n\r\n                <div class=\"filter-select-dropdown filter-fields-width\">\r\n                    <button class=\"filterBtn\" nz-button nzType=\"primary\" (click)=\"searchCar()\">Search\r\n                        Car</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nz-spin>\r\n</div>\r\n\r\n\r\n<div style=\"background-color: #F8F8F8;\">\r\n    <div class=\"child\" style=\"padding-bottom: 30px;\" *ngFor=\"let car of cars\">\r\n        <div nz-row>\r\n            <div nz-col nzSpan=\"8\">\r\n                <img class=\"profile\" style=\"height: 130px; width: 220px; border-radius: 10px;\" [src]=\"car.processedImg\"\r\n                    alt=\"profile\" />\r\n            </div>\r\n            <div nz-col nzSpan=\"16\">\r\n                <h2 style=\"cursor: pointer; color: #108ee9;\">\r\n                    {{car.brand}} - {{car.name}}</h2>\r\n                <p>{{car.description}}</p>\r\n\r\n                <hr>\r\n                <h5>Price : <b>${{car.price}}</b> - Color : <b>{{car.color}}</b> - Transmission :\r\n                    <b>{{car.transmission}}</b> - Type : <b>{{car.type}}</b> - Year : <b>{{car.modelYear | date:\r\n                        'yyyy'}}</b>\r\n                </h5>\r\n                <hr>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CustomerDashboardComponent } from './components/customer-dashboard/customer-dashboard.component';\r\nimport { BookCarComponent } from './components/book-car/book-car.component';\r\nimport { GetBookingsComponent } from './components/get-bookings/get-bookings.component';\r\nimport { SearchCarComponent } from './components/search-car/search-car.component';\r\n\r\nconst routes: Routes = [\r\n  { path: \"dashboard\", component: CustomerDashboardComponent },\r\n  { path: \"book_car/:id\", component: BookCarComponent },\r\n  { path: \"bookings\", component: GetBookingsComponent },\r\n  { path: \"search\", component: SearchCarComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { CustomerService } from '../../services/customer.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-search-car',\r\n  templateUrl: './search-car.component.html',\r\n  styleUrls: ['./search-car.component.scss']\r\n})\r\nexport class SearchCarComponent {\r\n\r\n  cars: any = [];\r\n  isSpinning = false;\r\n  validateForm: FormGroup;\r\n  listOfBrands = [\"BMW\", \"AUDI\", \"FERRARI\", \"TESLA\", \"VOLVO\", \"TOYOTA\", \"HONDA\", \"FORD\", \"NISSAN\", \"HYUNDAI\", \"LEXUS\", \"KIA\"];\r\n  listOfType = [\"Petrol\", \"Hybrid\", \"Diesel\", \"Electric\", \"CNG\"];\r\n  listOfColor = [\"Red\", \"White\", \"Blue\", \"Black\", \"Orange\", \"Grey\", \"Silver\"];\r\n  listOfTransmission = [\"Manual\", \"Automatic\"];\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private customerService: CustomerService) {\r\n    this.validateForm = this.fb.group({\r\n      brand: [null],\r\n      type: [null],\r\n      color: [null],\r\n      transmission: [null]\r\n    })\r\n  }\r\n\r\n  searchCar() {\r\n    this.isSpinning = true;\r\n    this.customerService.searchCar(this.validateForm.value).subscribe((res) => {\r\n      this.isSpinning = false;\r\n      console.log(res);\r\n      res.carDtoList.forEach(element => {\r\n        element.processedImg = 'data:image/jpeg;base64,' + element.returnedImage;\r\n        this.cars.push(element);\r\n      });\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\nimport { CustomerDashboardComponent } from './components/customer-dashboard/customer-dashboard.component';\r\nimport { NgZorroModule } from 'src/app/NgZorroModule';\r\nimport { BookCarComponent } from './components/book-car/book-car.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GetBookingsComponent } from './components/get-bookings/get-bookings.component';\r\nimport { SearchCarComponent } from './components/search-car/search-car.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomerDashboardComponent,\r\n    BookCarComponent,\r\n    GetBookingsComponent,\r\n    SearchCarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerRoutingModule,\r\n    NgZorroModule,\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class CustomerModule { }\r\n"],"x_google_ignoreList":[]}